EXPLAIN SELECT name FROM bidders
WHERE EXISTS (SELECT 1 FROM bids WHERE bids.bidder_id = bidders.id);
/*
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Hash Join  (cost=33.38..66.47 rows=635 width=32)
   Hash Cond: (bidders.id = bids.bidder_id)
   ->  Seq Scan on bidders  (cost=0.00..22.70 rows=1270 width=36)
   ->  Hash  (cost=30.88..30.88 rows=200 width=4)
         ->  HashAggregate  (cost=28.88..30.88 rows=200 width=4)
               Group Key: bids.bidder_id
               ->  Seq Scan on bids  (cost=0.00..25.10 rows=1510 width=4)
(7 rows)

The query plan generated by EXPLAIN lays out (in a node tree format) all of the
steps that will be followed when the query is run. It also lists the expected
efficiency of the query for each node, that value being the second number
following the "cost".

1. We starts by collecting all the values from bids where bidders.id = bids.bidder_id
2. Then we perform a "sequential scan" to collect all the values from the bidders table
3. Then in a new node (->  Hash) we perform some aggregation to see if the query table 
   generated with the bids.bidder_id "group key" exists (any rows are in the return table)
4. A sequential scan is performed on the bids table to get those values in order
   to select from them the values that match the bids.bidder_id group key.
*/


EXPLAIN ANALYZE SELECT name FROM bidders
WHERE EXISTS (SELECT 1 FROM bids WHERE bids.bidder_id = bidders.id);
/*
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=33.38..66.47 rows=635 width=32) (actual time=0.202..0.222 rows=6 loops=1)
   Hash Cond: (bidders.id = bids.bidder_id)
   ->  Seq Scan on bidders  (cost=0.00..22.70 rows=1270 width=36) (actual time=0.041..0.049 rows=7 loops=1)
   ->  Hash  (cost=30.88..30.88 rows=200 width=4) (actual time=0.131..0.132 rows=6 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  HashAggregate  (cost=28.88..30.88 rows=200 width=4) (actual time=0.072..0.081 rows=6 loops=1)
               Group Key: bids.bidder_id
               ->  Seq Scan on bids  (cost=0.00..25.10 rows=1510 width=4) (actual time=0.017..0.042 rows=26 loops=1)
 Planning time: 0.183 ms
 Execution time: 1.701 ms
(10 rows)

This query is the same as the EXPLAIN query plan, except that it actually runs 
the query first and returns the "actual" completion time in milliseconds for 
each node in the tree and the resources (memory, buckets, etc.) used as well as 
the total time taken to complete the query.
*/
